spring.application.name=@project.artifactId@
server.port = 41000

#rocketmq namesrv  的定义
spring.cloud.stream.rocketmq.binder.name-server=192.168.8.5:9876

#订阅主题（需要跟生产者一致）
spring.cloud.stream.bindings.test_one_in_put.destination=TEST-ONE-TOPIC
spring.cloud.stream.bindings.test_one_in_put.content-type=application/json
#消费者组（用来规划统一主题的消费者）
spring.cloud.stream.bindings.test_one_in_put.group=TEST-ONE-TOPIC-CONSUMER-GROUP
#是否启动消费功能
spring.cloud.stream.rocketmq.bindings.test_one_in_put.consumer.enabled:true
#广播消费 还是 集群消费
spring.cloud.stream.rocketmq.bindings.test_one_in_put.consumer.broadcasting:false


#订阅主题（需要跟生产者一致）
spring.cloud.stream.bindings.test_lay_in_put.destination=TEST-LAY-TOPIC
spring.cloud.stream.bindings.test_lay_in_put.content-type=application/json
#消费者组（用来规划统一主题的消费者）
spring.cloud.stream.bindings.test_lay_in_put.group=TEST-LAY-TOPIC-CONSUMER-GROUP
#是否启动消费功能
spring.cloud.stream.rocketmq.bindings.test_lay_in_put.consumer.enabled:true
#广播消费 还是 集群消费
spring.cloud.stream.rocketmq.bindings.test_lay_in_put.consumer.broadcasting:false


#订阅主题（需要跟生产者一致）
spring.cloud.stream.bindings.test_transactional_out_put.destination=TEST-TRANSACTIONAL-TOPIC
spring.cloud.stream.bindings.test_transactional_out_put.content-type=application/json
#消费者组（用来规划统一主题的消费者）
spring.cloud.stream.bindings.test_transactional_out_put.group=TEST-TRANSACTIONAL-TOPIC-GROUP
#是否启动消费功能
spring.cloud.stream.rocketmq.bindings.test_transactional_out_put.consumer.enabled:true
#广播消费 还是 集群消费
spring.cloud.stream.rocketmq.bindings.test_transactional_out_put.consumer.broadcasting:false


#订阅主题（需要跟生产者一致）
spring.cloud.stream.bindings.test_sharding_in_put.destination=TEST-SHARDING-TOPIC
spring.cloud.stream.bindings.test_sharding_in_put.content-type=application/json
#消费者组（用来规划统一主题的消费者）
spring.cloud.stream.bindings.test_sharding_in_put.group=TEST-SHARDING-TOPIC-GROUP
#是否启动消费功能
spring.cloud.stream.rocketmq.bindings.test_sharding_in_put.consumer.enabled:true
#广播消费 还是 集群消费
spring.cloud.stream.rocketmq.bindings.test_sharding_in_put.consumer.broadcasting:false

spring.cloud.stream.rocketmq.bindings.test_sharding_in_put.consumer.orderly:true





